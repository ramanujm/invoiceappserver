package com.duke.db.beans;
// Generated 18-Jan-2017 5:19:36 PM by Hibernate Tools 4.3.1.Final

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.Lob;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Invoice generated by hbm2java
 */
@Entity
@Table(name = "Invoice", catalog = "invoicedb")
public class Invoice implements java.io.Serializable {

	private Integer id;
	private Business business;
	private BusinessUser businessUser;
	private Customer customer;
	private BigDecimal subTotal;
	private BigDecimal discount;
	private BigDecimal taxTotal;
	private BigDecimal total;
	private String notes;
	private String contractTerm;
	private byte[] cusotmerSignature;
	private Date date;
	private Integer paymentTerm;
	private byte[] pdfdocument;
	private Set<LineItem> lineItems = new HashSet<LineItem>(0);

	public Invoice() {
	}

	public Invoice(Business business, BusinessUser businessUser, Customer customer, Date date) {
		this.business = business;
		this.businessUser = businessUser;
		this.customer = customer;
		this.date = date;
	}

	public Invoice(Business business, BusinessUser businessUser, Customer customer, BigDecimal subTotal,
			BigDecimal discount, BigDecimal taxTotal, BigDecimal total, String notes, String contractTerm,
			byte[] cusotmerSignature, Date date, Integer paymentTerm, byte[] pdfdocument, Set<LineItem> lineItems) {
		this.business = business;
		this.businessUser = businessUser;
		this.customer = customer;
		this.subTotal = subTotal;
		this.discount = discount;
		this.taxTotal = taxTotal;
		this.total = total;
		this.notes = notes;
		this.contractTerm = contractTerm;
		this.cusotmerSignature = cusotmerSignature;
		this.date = date;
		this.paymentTerm = paymentTerm;
		this.pdfdocument = pdfdocument;
		this.lineItems = lineItems;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "ID", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "BusinessID", nullable = false)
	public Business getBusiness() {
		return this.business;
	}

	public void setBusiness(Business business) {
		this.business = business;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PreparedBy", nullable = false)
	public BusinessUser getBusinessUser() {
		return this.businessUser;
	}

	public void setBusinessUser(BusinessUser businessUser) {
		this.businessUser = businessUser;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CustomerID", nullable = false)
	public Customer getCustomer() {
		return this.customer;
	}

	public void setCustomer(Customer customer) {
		this.customer = customer;
	}

	@Column(name = "SubTotal")
	public BigDecimal getSubTotal() {
		return this.subTotal;
	}

	public void setSubTotal(BigDecimal subTotal) {
		this.subTotal = subTotal;
	}

	@Column(name = "Discount")
	public BigDecimal getDiscount() {
		return this.discount;
	}

	public void setDiscount(BigDecimal discount) {
		this.discount = discount;
	}

	@Column(name = "TaxTotal")
	public BigDecimal getTaxTotal() {
		return this.taxTotal;
	}

	public void setTaxTotal(BigDecimal taxTotal) {
		this.taxTotal = taxTotal;
	}

	@Column(name = "Total")
	public BigDecimal getTotal() {
		return this.total;
	}

	public void setTotal(BigDecimal total) {
		this.total = total;
	}

	@Column(name = "Notes")
	@Lob
	public String getNotes() {
		return this.notes;
	}

	public void setNotes(String notes) {
		this.notes = notes;
	}

	@Column(name = "ContractTerm")
	@Lob
	public String getContractTerm() {
		return this.contractTerm;
	}

	public void setContractTerm(String contractTerm) {
		this.contractTerm = contractTerm;
	}

	@Column(name = "CusotmerSignature")
	@Lob
	public byte[] getCusotmerSignature() {
		return this.cusotmerSignature;
	}

	public void setCusotmerSignature(byte[] cusotmerSignature) {
		this.cusotmerSignature = cusotmerSignature;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "Date", nullable = false, length = 19)
	public Date getDate() {
		return this.date;
	}

	public void setDate(Date date) {
		this.date = date;
	}

	@Column(name = "PaymentTerm")
	public Integer getPaymentTerm() {
		return this.paymentTerm;
	}

	public void setPaymentTerm(Integer paymentTerm) {
		this.paymentTerm = paymentTerm;
	}

	@Column(name = "PDFDocument")
	@Lob
	public byte[] getPdfdocument() {
		return this.pdfdocument;
	}

	public void setPdfdocument(byte[] pdfdocument) {
		this.pdfdocument = pdfdocument;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "LineItem_Invoice", catalog = "invoicedb", joinColumns = {
			@JoinColumn(name = "InvoiceID", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "LineItemID", nullable = false, updatable = false) })
	public Set<LineItem> getLineItems() {
		return this.lineItems;
	}

	public void setLineItems(Set<LineItem> lineItems) {
		this.lineItems = lineItems;
	}

}
